name: CI

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        python-version: [3.12]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Set up Python ${{ matrix.python-version }}
        id: setup-python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install pipx
        run: |
          python -m pip install --user pipx
          python -m pipx ensurepath

      - name: Install Poetry
        run: pipx install poetry

      - name: Get poetry cache path
        id: poetry-cache
        run: echo "dir=$(poetry config virtualenvs.path)" >> $GITHUB_OUTPUT

      - name: Cache Python virtual environment
        uses: actions/cache@v4
        id: cache-venv
        with:
          path: ${{ steps.poetry-cache.outputs.dir }}
          key: ${{ runner.os }}-python-${{ steps.setup-python.outputs.python-version }}-poetry-${{ hashFiles('**/poetry.lock') }}
          restore-keys: |
            ${{ runner.os }}-python-${{ steps.setup-python.outputs.python-version }}-poetry-

      - name: Install dependencies
        if: steps.cache-venv.outputs.cache-hit != 'true'
        run: poetry install --no-interaction --no-root

      - name: Run checks
        run: make check
