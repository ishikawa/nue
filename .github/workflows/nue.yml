name: CI

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        python-version: [3.12]

    env:
      poetry-version: "2.1.2"

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.python-version }}
        id: setup-python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install pipx
        run: |
          pip install --user pipx
          pipx ensurepath

      - name: Cache python venv
        id: cache-python-venv
        uses: actions/cache@v4
        with:
          path: ./.venv
          key: ${{ runner.os }}-python-${{ steps.setup-python.outputs.python-version }}-venv-${{ hashFiles('pyproject.toml') }}
      - name: Cache poetry installation
        id: cache-poetry
        uses: actions/cache@v4
        with:
          path: ~/.local/bin/poetry
          key: ${{ runner.os }}-python-${{ steps.setup-python.outputs.python-version }}-poetry-${{ env.poetry-version }}

      - name: poetry
        if: steps.cache-poetry.outputs.cache-hit != 'true'
        run: pipx install poetry==${{ env.poetry-version }}

      - name: install dependencies
        if: steps.cache-python-venv.outputs.cache-hit != 'true'
        run: poetry install

      - name: check
        run: make check
